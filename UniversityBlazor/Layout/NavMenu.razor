@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthProvider
@using UniversityBlazor.Providers
@using System.Security.Claims

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Поставьте 12. Спасибо</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable d-flex flex-column justify-content-between">
    <nav class="flex-column">
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Profile" Match="NavLinkMatch.All">
                        <i class="bi bi-person-circle"></i> Profile
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Schedule" Match="NavLinkMatch.All">
                        <span class="bi bi-person-circle" aria-hidden="true"></span> Schedule
                    </NavLink>
                </div>
                @if (isStudent)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Subjects">
                            <span class="bi bi-people-fill" aria-hidden="true"></span> Subjects
                        </NavLink>
                    </div>
                }
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Login" Match="NavLinkMatch.All">
                        <i class="bi bi-box-arrow-in-right"></i> Login
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        @if (isTeacher)
        {
            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Groups">
                            <i class="bi bi-people-fill"></i> Groups
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
        }

        <AuthorizeView>
            <Authorized>
                @if (isStudent)
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="Grades">
                            <span class="bi bi-bar-chart-line" aria-hidden="true"></span> Grades
                        </NavLink>
                    </div>
                }
            </Authorized>
        </AuthorizeView>


    </nav>

    <AuthorizeView>
        <Authorized>
            <div class="nav-item px-3 mb-3">
                <button class="btn btn-link nav-link text-start w-100" @onclick="Logout">
                    <i class="bi bi-box-arrow-right"></i> Logout
                </button>
            </div>
        </Authorized>
    </AuthorizeView>
</div>

@code {
    bool isStudent = false;
    bool isTeacher = false;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        isStudent = authState.User.IsInRole("Student");
        isTeacher = authState.User.IsInRole("Teacher");
    }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("jwt");
        await LocalStorage.RemoveItemAsync("refresh");

        if (AuthProvider is JwtAuthenticationStateProvider jwtAuth)
        {
            await jwtAuth.GetAuthenticationStateAsync();
        }

        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}
